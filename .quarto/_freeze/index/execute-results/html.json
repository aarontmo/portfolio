{
  "hash": "ff81cbd3b12e42ad200dbeccdecd617f",
  "result": {
    "markdown": "---\ntitle: Breast Cancer Classification\nAuthor: Aaron Morris\ntoc: true\ncode-fold: true\nengine: jupyter\n---\n\n# Introduction\n\n**Probelem:** Automate the diagnosis of breast cancer.\n\n**Background:** Breast cancer is one of the most prevalent forms of cancer among woment. Early detection and diagnosis (malignant or benign) is crucial for a positive response to treatment. \n\n**Goal:** The goal of the project is to train a machine learning model to predict whether breast tissue is malignant or benign. This classification will be based on several features that were extracted from microscopy images of fine needle aspirate of a breast tissue. \n\n**Data:** More information on the data can be found [here](https://www.kaggle.com/datasets/uciml/breast-cancer-wisconsin-data/data) and [here](https://archive.ics.uci.edu/dataset/17/breast+cancer+wisconsin+diagnostic)\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# import libraries\nimport os\n\nimport pandas as pd\nimport numpy as np\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, RandomizedSearchCV\nfrom sklearn.metrics import confusion_matrix, accuracy_score, roc_curve\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# read in data\ndata = pd.read_csv(os.getcwd() + '/data/data.csv')\n```\n:::\n\n\n# Exploratory Data Analysis\n\nThe data include ten morphological and texture based features of cell nuclei in each image including the mean, standard error, and largest value (mean of three largest values) for each feature. The list below shows all the features that will be used for classification.\n\n- radius \n\n- texture (standard deviation of gray-scale values)\n\n- perimeter\n\n- area\n\n- smoothness\n\n- compactness\n\n- concavity\n\n- concave points\n\n- symmetry\n\n- fractal dimension\n\nWe can get a good idea of what features will be important in the classification model by looking at the distributions of each feature individually subsetted by the diagnosis. Because there are 30 feature columns we will only look at the mean of each the features above.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# subset data for features ending in _mean and diagnosis\nmean_df = (\n    data\n    .filter(regex='mean|diagnosis')\n)\n\nmean_cols = [col for col in mean_df.columns if 'mean' in col]\n\nfor col in mean_cols:\n    plt.figure(figsize=(10,6))\n\n    sns.histplot(\n        mean_df,\n        x=col,\n        hue='diagnosis',\n        kde=True,\n        stat='density'\n    )\n    \n    plt.title(f'Distribution of {col}')\n    plt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-1.png){width=820 height=523}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-2.png){width=820 height=523}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-3.png){width=837 height=523}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-4.png){width=846 height=523}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-5.png){width=808 height=523}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-6.png){width=799 height=523}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-7.png){width=799 height=523}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-8.png){width=821 height=523}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-9.png){width=808 height=523}\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-10.png){width=808 height=523}\n:::\n:::\n\n\nA few observations based on these plots:\n\n- It appears (with the a few exceptions) that the malignant group generally has a broader distribution comapared to the benign group which appears to have a tighter spread (more on this later).\n\n- With the exception of fractal dimension, symmetry, and smoothness there appears to be good separation between the malignant and benign distribtusions\n\n- The malignant group appears to have higher values on average compared to the benign group\n\nI am curious about the spread of the malignant and benign groups. Below is a table showing the standard deviations of the ten features.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n(\n    data\n    .filter(regex='mean|diagnosis')\n    .groupby('diagnosis')\n    .agg('std')\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>radius_mean</th>\n      <th>texture_mean</th>\n      <th>perimeter_mean</th>\n      <th>area_mean</th>\n      <th>smoothness_mean</th>\n      <th>compactness_mean</th>\n      <th>concavity_mean</th>\n      <th>concave points_mean</th>\n      <th>symmetry_mean</th>\n      <th>fractal_dimension_mean</th>\n    </tr>\n    <tr>\n      <th>diagnosis</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>B</th>\n      <td>1.780512</td>\n      <td>3.995125</td>\n      <td>11.807438</td>\n      <td>134.287118</td>\n      <td>0.013446</td>\n      <td>0.033750</td>\n      <td>0.043442</td>\n      <td>0.015909</td>\n      <td>0.024807</td>\n      <td>0.006747</td>\n    </tr>\n    <tr>\n      <th>M</th>\n      <td>3.203971</td>\n      <td>3.779470</td>\n      <td>21.854653</td>\n      <td>367.937978</td>\n      <td>0.012608</td>\n      <td>0.053987</td>\n      <td>0.075019</td>\n      <td>0.034374</td>\n      <td>0.027638</td>\n      <td>0.007573</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nFor most of the features the standard deviation of the malginant group is larger than benign group. The features where this is most apparent are the morphological features such as radius (3.20 vs 1.78) and perimeter (21.85 vs 11.81). It is generally known that cancer cells have irregular shapes and sizes some being larger and some being smaller than normal cells. This is a reasonable explanation for the wider spread of morphological features in the malignant group.\n\nOne of biggest concerns with classification tasks is how balanced the outcome variable is. The barchart below shows the total number of malignant and benign breat tissue samples.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# diagnosis counts\nax = sns.countplot(\n    data,\n    x='diagnosis'\n)\n\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(\n        p.get_x() + p.get_width() / 2,\n        height + 3,\n        f'{height:.0f}',\n        ha=\"center\",\n    )\n\nplt.title('Outcome Count')\nplt.xlabel('Diagnosis')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=593 height=449}\n:::\n:::\n\n\n63% of the observations are benign. The outcome is slightly unbalanced but no to the point where we would need to use any imputation  or oversampling method.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}